@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor UI_COLOR_T4
skinparam classBackgroundColor UI_COLOR
skinparam classBorderColor RANK_COLOR_T1
skinparam classStereotypeFontColor RANK_COLOR_T1

skinparam class {
  BackgroundColor<<hidden>> #FFFFFF
  BorderColor<<hidden>> #FFFFFF
  StereotypeFontColor<<hidden>> White
}

package UI <<Rectangle>>{
Class "<<interface>>\nUi" as Ui
Class "{abstract}\nUiPart<T>" as UiPart
Class UiManager
Class MainWindow
Class HelpWindow
Class ResultDisplay
Class ClientListPanel
Class ClientCard
Class ClientDetailPanel
Class StatusBarFooter
Class CommandBox
}

package Model <<Rectangle>> {
    class HiddenModel <<hidden>>
}

package Logic <<Rectangle>> {
    class HiddenLogic <<hidden>>
}

Class HiddenOutside <<hidden>>
HiddenOutside ..> Ui

UiManager .left.|> Ui
UiManager -down-> "1" MainWindow

MainWindow *-down-> "1" CommandBox
MainWindow *-down-> "1" ResultDisplay
MainWindow *-down-> "1" ClientListPanel
MainWindow --> "0..1" ClientDetailPanel
MainWindow *-down-> "1" StatusBarFooter
MainWindow --> "0..1" HelpWindow


class "UiPart<Stage>" as UiStage
class "UiPart<Region>" as UiRegion

MainWindow -left-|> UiStage
HelpWindow --|> UiStage
ResultDisplay --|> UiRegion
CommandBox --|> UiRegion
ClientListPanel --|> UiRegion
ClientCard --|> UiRegion
ClientDetailPanel --|> UiRegion
StatusBarFooter --|> UiRegion

ClientListPanel -down-> "*" ClientCard
ClientCard .down.> Model
ClientDetailPanel .down.> Model

note bottom of UiPart
  T = Stage (Windows) or Region (Components)
  Contains FXML loader implementation
end note
UiManager -right-> Logic
MainWindow -left-> Logic

ClientListPanel -[hidden]left- HelpWindow
HelpWindow -[hidden]left- CommandBox
CommandBox -[hidden]left- ResultDisplay
ResultDisplay -[hidden]left- StatusBarFooter
ClientDetailPanel -[hidden]right- ClientListPanel

@enduml
